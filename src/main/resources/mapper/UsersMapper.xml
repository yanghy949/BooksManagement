<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.manager.dao.UsersMapper">
    <resultMap id="BaseResultMap" type="Users" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="avatar" property="avatar" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
        <result column="is_admin" property="isAdmin" jdbcType="INTEGER" />
        <result column="tel" property="tel" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="size" property="size" jdbcType="INTEGER" />
        <result column="identity" property="identity" jdbcType="INTEGER" />
    </resultMap>

    <!-- 模糊查询 -->
    <select id="findListByLike" resultMap="BaseResultMap" >
        select * from users
        <where>
            <if test="_parameter != null and _parameter != ''">
               and `username` like CONCAT('%',#{_parameter},'%') or `nickname` like CONCAT('%',#{_parameter},'%')
            </if>
        </where>
    </select>

    <select id="findUserById" resultMap="BaseResultMap" parameterType="Integer">
        select * from users where id = #{id}
    </select>
    <select id="findUser" parameterType="String" resultMap="BaseResultMap" resultType="Users">
        select * from users where username = #{username}
    </select>

    <update id="updateUsers" parameterType="Users">
        update users set
        nickname = #{nickname},
        username = #{username},
        password = #{password},
        birthday = #{birthday},
        is_admin = #{isAdmin},
        tel = #{tel},
        email = #{email},
        address = #{address},
        size = #{size},
        identity = #{identity}
        where id = #{id}
    </update>
    <insert id="addUser" parameterType="Users">
        insert into users(avatar,nickname,username,password,birthday,is_admin,tel,email,address,size,identity)
        values(#{avatar},#{nickname},#{username},#{password},#{birthday},#{isAdmin},#{tel},#{email},#{address},#{size},#{identity})
    </insert>
    <delete id="delUser" parameterType="Integer">
        delete from users where id = #{id}
    </delete>
</mapper>